#pragma checksum "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "229a39599a4e9ad291e493ba552fcb11db43c307"
// <auto-generated/>
#pragma warning disable 1591
namespace WebApplication1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using WebApplication1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\6308\ShuWu_MatchGame\WebApplication1\_Imports.razor"
using WebApplication1.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
using System.Timers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, @"<style>
    .container{
        width: 400px;
    }
#button1,#button2,#button3 {
        width: 60px;
        height: 60px;
        margin-left: 30px;
        background-color: orange;
    }

    button{
        width:100px;
        height: 100px;
    }

    h2{
       color:hotpink;
       font-weight:bold;
       font-size:22px;
    }
    h5{
        font-size:20px;
    }
    h3 {
        font-size: 18px;
        color:orchid;
    }

    h4 {
        font-size: 20px;
        font-weight: bold;
    }
    .textShow {
    }
</style>

");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "class", "container");
            __builder.AddMarkupContent(3, "<div class=\"col-sm-6\">\r\n        Enter Name:\r\n    </div>\r\n    ");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "col-sm-6");
            __builder.OpenElement(6, "input");
            __builder.AddAttribute(7, "type", "text");
            __builder.AddAttribute(8, "placeholder", "Enter your name");
            __builder.AddAttribute(9, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 50 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                          UpdateName

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(10, "\r\n\r\n    \r\n    ");
            __builder.AddMarkupContent(11, "<div class=\"col-sm-6\"> Pick a date: </div>\r\n    ");
            __builder.OpenElement(12, "div");
            __builder.AddAttribute(13, "class", "col-sm-6");
            __builder.OpenElement(14, "input");
            __builder.AddAttribute(15, "type", "date");
            __builder.AddAttribute(16, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 56 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                      UpdateDate

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(17, "\r\n\r\n    \r\n    \r\n    ");
            __builder.OpenElement(18, "div");
            __builder.AddAttribute(19, "class", "textShow");
            __builder.AddAttribute(20, "id", "timePlayShow");
            __builder.OpenElement(21, "h2");
            __builder.AddMarkupContent(22, "\r\n            You have : ");
            __builder.OpenElement(23, "strong");
            __builder.AddContent(24, 
#nullable restore
#line 63 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                 DisplayVaulue

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(25, " s to complete game!\r\n        ");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(26, "\r\n    ");
            __builder.AddMarkupContent(27, "<h4>Click a button to pick up a time: </h4>\r\n    ");
            __builder.OpenElement(28, "div");
            __builder.AddAttribute(29, "class", "row ");
            __builder.OpenElement(30, "button");
            __builder.AddAttribute(31, "type", "button");
            __builder.AddAttribute(32, "class", "btn btn-secondary");
            __builder.AddAttribute(33, "id", "button1");
            __builder.AddAttribute(34, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 70 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                          () => TimeButtonClick(10.ToString(),10)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(35, "<h5>10S</h5>");
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "\r\n\r\n        ");
            __builder.OpenElement(37, "button");
            __builder.AddAttribute(38, "type", "button");
            __builder.AddAttribute(39, "class", "btn btn-secondary");
            __builder.AddAttribute(40, "id", "button2");
            __builder.AddAttribute(41, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 75 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                          () => TimeButtonClick(20.ToString(),20)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(42, "<h5>20S</h5>");
            __builder.CloseElement();
            __builder.AddMarkupContent(43, "\r\n\r\n        ");
            __builder.OpenElement(44, "button");
            __builder.AddAttribute(45, "type", "button");
            __builder.AddAttribute(46, "class", "btn btn-secondary");
            __builder.AddAttribute(47, "id", "button3");
            __builder.AddAttribute(48, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 80 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                          () => TimeButtonClick(30.ToString(),30)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(49, "<h5>30S</h5>");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(50, "\r\n    <br>\r\n    \r\n    ");
            __builder.OpenElement(51, "div");
            __builder.AddAttribute(52, "class", "row");
            __builder.OpenElement(53, "h3");
            __builder.AddMarkupContent(54, "<b>Highest Score:</b> ");
            __builder.AddContent(55, 
#nullable restore
#line 87 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                   playerHScore

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(56, "     Player: ");
            __builder.AddContent(57, 
#nullable restore
#line 87 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                                                       playerHname

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(58, "       Date: ");
            __builder.AddContent(59, 
#nullable restore
#line 87 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                                                                                          playerHdate

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(60, "\r\n\r\n    \r\n    ");
            __builder.OpenElement(61, "div");
            __builder.AddAttribute(62, "class", "row ");
#nullable restore
#line 92 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
         for (var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
        {
            var animal = shuffledAnimals[animalNumber];
            var uniqueDescript = $"Button #{animalNumber}";


#line default
#line hidden
#nullable disable
            __builder.OpenElement(63, "div");
            __builder.AddAttribute(64, "class", "col-3");
            __builder.OpenElement(65, "button");
            __builder.AddAttribute(66, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 98 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                    () => ButtonClick(animal, uniqueDescript)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(67, "type", "button");
            __builder.AddAttribute(68, "class", "btn btn-outline-dark");
            __builder.OpenElement(69, "h1");
            __builder.AddContent(70, 
#nullable restore
#line 100 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                         animal

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 103 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(71, "\r\n    ");
            __builder.OpenElement(72, "div");
            __builder.AddAttribute(73, "class", "row");
            __builder.OpenElement(74, "h4");
            __builder.AddMarkupContent(75, "<b>Matches Found:</b> ");
            __builder.AddContent(76, 
#nullable restore
#line 106 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                                   matchesFound

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(77, "\r\n    ");
            __builder.OpenElement(78, "div");
            __builder.AddAttribute(79, "class", "row");
            __builder.OpenElement(80, "h4");
            __builder.AddMarkupContent(81, "<b>Time:</b> ");
            __builder.AddContent(82, 
#nullable restore
#line 109 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                          remainingTime

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(83, "\r\n    \r\n    ");
            __builder.OpenElement(84, "div");
            __builder.AddAttribute(85, "class", "row");
            __builder.OpenElement(86, "h4");
            __builder.AddMarkupContent(87, "<b>Score: </b> ");
            __builder.AddContent(88, 
#nullable restore
#line 113 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
                            score

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 118 "E:\6308\ShuWu_MatchGame\WebApplication1\Pages\Index.razor"
      


    /*********---------------------------------------------------Assignment summary in the end of code----------------------------------------------************/
    List<string> animalEmoji = new List<string>()
    {
        "🐰","🐰",
        "🐶","🐶",
        "🐱", "🐱",
        "🦄", "🦄",
        "🐼","🐼",
        "🐔", "🐔",
        "🐧", "🐧",
        "🐯", "🐯"
    };

    List<string> shuffledAnimals = new List<string>();
    //player can clict button to pick up a time they like
    int buttonValue;
    int buttonNumber;
    int matchesFound = 0;
    Timer timer;
    int tenthsOfSecondElapsed = 0;
    //how much time remaining
    string remainingTime;
    //player have how much time to play game
    int initialTime;
    //count how much time remaining
    float timeCount;
    float timeDisplay;

    //count player's score
    int score;
    //track the highest score in game
    int hScore = 0;
    int playerHScore;
    int currentScore;
    string playerHname = "";
    string hName = "";
    string name = "";
    string date = "";
    string hDate = "";
    string playerHdate = "";


    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;
        SetUpGame();
        initialTime = 10;
        buttonValue = 10;
    }
    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
        matchesFound = 0;
        tenthsOfSecondElapsed = 0;
        //reset player's score
        score = 0;
        buttonValue = 10;
        timeCount = 0;
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if(lastAnimalFound == string.Empty)
        {
            lastAnimalFound = animal;
            lastDescription = animalDescription;
            timer.Start();
        }
        else if (lastAnimalFound == animal &&  lastDescription != animalDescription)
        {
            lastAnimalFound = string.Empty;

            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
            matchesFound++;
            //if match successfully, player will get 1 point, Task A&C 
            score++;
            if(matchesFound == 8)
            {
                timer.Stop();
                remainingTime += " - You Win!";
                currentScore = score;
                CompareScore(currentScore, playerHScore);
                //make sure highest name and date will remain after setupgame, Task A&C
                hName = playerHname;
                hDate = playerHdate;
                SetUpGame();
            }
        }
        else
        {
            lastAnimalFound = string.Empty;
            //if players select the incorrect animal, they will lose 1 point 
            score--;
        }
        //when score < 0, score will still is 0, Task A&C 
        if (score < 0)
        {
            score = 0;
        }

    }

    private void Timer_Tick(Object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            // assign buttonValue to initialTime, so that when play pick up a time, the Timer will change, Task A&B
            initialTime = buttonValue;
            tenthsOfSecondElapsed++;
            timeDisplay = tenthsOfSecondElapsed / 10f;
            remainingTime = (initialTime - timeDisplay).ToString("0,0s");
            timeCount= (initialTime - timeDisplay);
            StateHasChanged();

        });
        //if time become 0 and players not match all animals, they will lose, Task A&C 
        if (timeCount == 0 && matchesFound != 8)
        {
            timer.Stop();
            remainingTime += " - You Lose!";
            currentScore = score;
            CompareScore(currentScore, playerHScore);
            //make sure highest name and date will remain after setupgame, Task A&C 
            hName = playerHname;
            hDate = playerHdate;
            SetUpGame();

        }
    }

    // achieve button value and display information, Task A&B
    private string DisplayVaulue = "";
    private void TimeButtonClick(string displayValue, int ButtonValue)
    {
        buttonValue =  ButtonValue;
        DisplayVaulue = displayValue;
    }

    //change players date, Task A&B
    private void UpdateDate(ChangeEventArgs e)
    {
        date = e.Value.ToString();
    }

    //change players name, Task A&B
    private void UpdateName(ChangeEventArgs e)
    {
        name = e.Value.ToString();
    }

    // compare new player score and highest history score, Task A&C 
    private void CompareScore(int currentScore, int hScore)
    {
        if (currentScore < hScore)
        {
            playerHScore = hScore;
            playerHname = hName;
            playerHdate = hDate;
        }
        else
        {
            playerHScore = currentScore;
            playerHname = name;
            playerHdate = date;
        }
    }
    /*****
    ------------------------------------------------------------------Assignment summary ---------------------------------------------------------------------

    Make the game timer count down instead of up. If the timer reaches 0 before all matches are made, the player loses (Task A & B)
    state: Finish
        1. create an int initialTime, which store players have how much time to play game
        2. create a string remainingTime to show the text of how much time remains, and assign it to page, so player can see it
        3. create a int timeCount to count players have how much time remain now
        4. change the value type of timeDisplay from string to int
        5. timeCount= (initialTime - timeDisplay)
        6. reset timeCount to 0 in the SetUpGame, so when player reset the game, time will reset again


    Change the game so that the player scores 1 point for every correct match and loses 1 point for every wrong match (Task A & C)
    state: Finish
        1. create an int score to store player's score
        2. when player match a pair of animal ( lastAnimalFound == animal &&  lastDescription != animalDescription), socre ++
        3. when player make a mistake to match a pair of animals ( lastAnimalFound = string.Empty;), score--
        4. we need to make sure the score does not become negative, so I use if statement to fix it that when score <0, score = 0;
        5. reset score = 0 in SetUpGame and OnInitialized


     Add a variable to keep track of the game's high score to complete all matches and show the player's name and date（Task A & B & C）
     state: Finish
        1. int hScore to store player's highest score in the history 
        2. int current score to store the score in current  game 
        3. int playerHScore to store new highest score
        4. use string playerHname = ""; string playerHdate = ""; to show the text information of the new highest score player on page
        5. use string date = ""; string name = ""  to store current player's information
        6. string hDate = "";  string hName = ""; to store pass higheset player's information 
        7. use function CompareScore to compare new player score and highest history score, if currentscore >= hscore,  playerHScore = currentscore, so we can update the new score 
        8. when player win or lose game, update currentScore = score and use function CompareScore to compare scores


    Let the user pick how much time they are given to complete the game (requirements A and B)
    state: Finish
        1. create 3 buttons on page, so players can click button to pick up a time they like
        2. create an int buttunValue to store button's value
        3. create an int buttunNumber to show the button's number
        4. create a function TimeButtonClick, use this to achieve button value and display information, and assign value to each button
        5. in Timer_Tick function, assign buttonValue to initialTime, so when player pick up a button, the game remaning time will become the buttonValue  
        6. give a defaut value buttonValue = 10, When player SetUpGame or Initialize game. So if player don't pick up a button, default remaindingtime will become 10s 


    Change the game to be more like traditional "memory" or "concentration" -- i.e., the images for all 16 buttons are the same and the player only sees the "shuffled animal" image after they click on a button (requirement C, possibly B)
    state: Plan
        1. inorder to finish it, I think I need to know how to flip animal cards from blank face to animal face
        2. maybe I can use empty string as the blank face, and in the beginning, all cards are blank face.
        3. write an if else statement, if player click the blank face, it will flip for 1s, then turn back to blank face
    *****/







#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
